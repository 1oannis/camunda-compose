#!/bin/bash
# Script to restore a backup of Camunda 8 data

# Check if backup path is provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 <backup_directory>"
    exit 1
fi

BACKUP_DIR="$1"

# Check if backup directory exists
if [ ! -d "$BACKUP_DIR" ]; then
    echo "Error: Backup directory $BACKUP_DIR does not exist"
    exit 1
fi

# Get script directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
CAMUNDA_DIR="$(dirname "$SCRIPT_DIR")"

echo "Starting Camunda 8 restore from $BACKUP_DIR..."

# Stop services
cd "$CAMUNDA_DIR"
docker-compose down

# Restore PostgreSQL data
if [ -f "$BACKUP_DIR/postgres_data.tar.gz" ]; then
    echo "Restoring PostgreSQL data..."
    rm -rf "$CAMUNDA_DIR/container.postgres/data"
    mkdir -p "$CAMUNDA_DIR/container.postgres/data"
    tar -xzf "$BACKUP_DIR/postgres_data.tar.gz" -C "$CAMUNDA_DIR/container.postgres"
fi

# Restore Web Modeler DB data
if [ -f "$BACKUP_DIR/web_modeler_db_data.tar.gz" ]; then
    echo "Restoring Web Modeler DB data..."
    rm -rf "$CAMUNDA_DIR/container.web-modeler-db/data"
    mkdir -p "$CAMUNDA_DIR/container.web-modeler-db/data"
    tar -xzf "$BACKUP_DIR/web_modeler_db_data.tar.gz" -C "$CAMUNDA_DIR/container.web-modeler-db"
fi

# Restore Elasticsearch data
if [ -f "$BACKUP_DIR/elasticsearch_data.tar.gz" ]; then
    echo "Restoring Elasticsearch data..."
    rm -rf "$CAMUNDA_DIR/container.elasticsearch/data"
    mkdir -p "$CAMUNDA_DIR/container.elasticsearch/data"
    tar -xzf "$BACKUP_DIR/elasticsearch_data.tar.gz" -C "$CAMUNDA_DIR/container.elasticsearch"
fi

# Restore Zeebe data
if [ -f "$BACKUP_DIR/zeebe_data.tar.gz" ]; then
    echo "Restoring Zeebe data..."
    rm -rf "$CAMUNDA_DIR/container.zeebe/data"
    mkdir -p "$CAMUNDA_DIR/container.zeebe/data"
    tar -xzf "$BACKUP_DIR/zeebe_data.tar.gz" -C "$CAMUNDA_DIR/container.zeebe"
fi

# Restore Keycloak data
if [ -f "$BACKUP_DIR/keycloak_data.tar.gz" ]; then
    echo "Restoring Keycloak data..."
    rm -rf "$CAMUNDA_DIR/container.keycloak/data"
    mkdir -p "$CAMUNDA_DIR/container.keycloak/data"
    tar -xzf "$BACKUP_DIR/keycloak_data.tar.gz" -C "$CAMUNDA_DIR/container.keycloak"
fi

# Restore Web Modeler components
if [ -f "$BACKUP_DIR/web_modeler_restapi_data.tar.gz" ]; then
    echo "Restoring Web Modeler REST API data..."
    rm -rf "$CAMUNDA_DIR/container.web-modeler-restapi/data"
    mkdir -p "$CAMUNDA_DIR/container.web-modeler-restapi/data"
    tar -xzf "$BACKUP_DIR/web_modeler_restapi_data.tar.gz" -C "$CAMUNDA_DIR/container.web-modeler-restapi"
fi

if [ -f "$BACKUP_DIR/web_modeler_webapp_data.tar.gz" ]; then
    echo "Restoring Web Modeler WebApp data..."
    rm -rf "$CAMUNDA_DIR/container.web-modeler-webapp/data"
    mkdir -p "$CAMUNDA_DIR/container.web-modeler-webapp/data"
    tar -xzf "$BACKUP_DIR/web_modeler_webapp_data.tar.gz" -C "$CAMUNDA_DIR/container.web-modeler-webapp"
fi

if [ -f "$BACKUP_DIR/web_modeler_websockets_data.tar.gz" ]; then
    echo "Restoring Web Modeler WebSockets data..."
    rm -rf "$CAMUNDA_DIR/container.web-modeler-websockets/data"
    mkdir -p "$CAMUNDA_DIR/container.web-modeler-websockets/data"
    tar -xzf "$BACKUP_DIR/web_modeler_websockets_data.tar.gz" -C "$CAMUNDA_DIR/container.web-modeler-websockets"
fi

# Restore configuration files
if [ -f "$BACKUP_DIR/configuration.tar.gz" ]; then
    echo "Restoring configuration files..."
    rm -rf "$CAMUNDA_DIR/configuration"
    mkdir -p "$CAMUNDA_DIR/configuration"
    tar -xzf "$BACKUP_DIR/configuration.tar.gz" -C "$CAMUNDA_DIR"
fi

echo "Restore complete. Starting services..."

# Start services
docker-compose up -d

echo "Services started successfully." 