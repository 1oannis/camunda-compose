# Identity Management components
# This file contains services for authentication and user management

services:
  keycloak: # https://hub.docker.com/r/bitnami/keycloak
    container_name: keycloak
    image: bitnami/keycloak:${KEYCLOAK_SERVER_VERSION}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${HOSTNAME}`) && PathPrefix(`/auth`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls.certresolver=letsencrypt"
      - "traefik.http.services.keycloak.loadbalancer.server.port=18080"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Host=${HOSTNAME}"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-For=$${client_ip}"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Port=443"
      - "traefik.http.middlewares.keycloak-cors.headers.accesscontrolallowmethods=${CORS_ALLOWED_METHODS}"
      - "traefik.http.middlewares.keycloak-cors.headers.accesscontrolallowheaders=${CORS_ALLOWED_HEADERS}"
      - "traefik.http.middlewares.keycloak-cors.headers.accesscontrolalloworiginlist=${CORS_ALLOWED_ORIGINS}"
      - "traefik.http.middlewares.keycloak-cors.headers.accesscontrolallowcredentials=${CORS_ALLOW_CREDENTIALS}"
      - "traefik.http.routers.keycloak.middlewares=keycloak-headers,keycloak-cors"
    environment:
      TZ: ${TIMEZONE}
      KEYCLOAK_HTTP_PORT: 18080
      KEYCLOAK_HTTP_RELATIVE_PATH: /auth
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_DATABASE_USER: ${PG_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${PG_PASSWORD}
      KEYCLOAK_ADMIN_USER: ${KC_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: true
      # Keycloak v24.0.5 proxy configuration - using xforwarded headers
      KEYCLOAK_PROXY_ADDRESS_FORWARDING: true
      KEYCLOAK_PROXY_HEADERS: xforwarded
    volumes:
      - keycloak-theme:/opt/bitnami/keycloak/themes/identity
    networks:
      - camunda-platform
      - identity-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:18080/auth/health/ready"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: "0.8"
        reservations:
          memory: 800M
          cpus: "0.3"

  identity: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#identity
    container_name: identity
    image: camunda/identity:${CAMUNDA_IDENTITY_VERSION}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.identity.rule=Host(`${HOSTNAME}`) && PathPrefix(`/identity`)"
      - "traefik.http.routers.identity.entrypoints=websecure"
      - "traefik.http.routers.identity.tls.certresolver=letsencrypt"
      - "traefik.http.services.identity.loadbalancer.server.port=8084"
      - "traefik.http.middlewares.identity-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.identity-headers.headers.customrequestheaders.X-Forwarded-Host=${HOSTNAME}"
      - "traefik.http.middlewares.identity-cors.headers.accesscontrolallowmethods=${CORS_ALLOWED_METHODS}"
      - "traefik.http.middlewares.identity-cors.headers.accesscontrolallowheaders=${CORS_ALLOWED_HEADERS}"
      - "traefik.http.middlewares.identity-cors.headers.accesscontrolalloworiginlist=${CORS_ALLOWED_ORIGINS}"
      - "traefik.http.middlewares.identity-cors.headers.accesscontrolallowcredentials=${CORS_ALLOW_CREDENTIALS}"
      - "traefik.http.routers.identity.middlewares=identity-headers,identity-cors"
    environment: # https://docs.camunda.io/docs/self-managed/identity/deployment/configuration-variables/
      TZ: ${TIMEZONE}
      SERVER_PORT: 8084
      IDENTITY_BASE_PATH: /identity
      IDENTITY_RETRY_DELAY_SECONDS: 30
      IDENTITY_URL: https://${HOSTNAME}/identity
      KEYCLOAK_URL: http://keycloak:18080/auth
      IDENTITY_AUTH_PROVIDER_ISSUER_URL: https://${HOSTNAME}/auth/realms/camunda-platform
      IDENTITY_AUTH_PROVIDER_BACKEND_URL: http://keycloak:18080/auth/realms/camunda-platform
      IDENTITY_DATABASE_HOST: postgres
      IDENTITY_DATABASE_PORT: 5432
      IDENTITY_DATABASE_NAME: ${PG_DB}
      IDENTITY_DATABASE_USERNAME: ${PG_USER}
      IDENTITY_DATABASE_PASSWORD: ${PG_PASSWORD}
      KEYCLOAK_INIT_OPERATE_SECRET: ${OPERATE_CLIENT_SECRET}
      KEYCLOAK_INIT_OPERATE_ROOT_URL: https://${HOSTNAME}/operate
      KEYCLOAK_INIT_TASKLIST_SECRET: ${TASKLIST_CLIENT_SECRET}
      KEYCLOAK_INIT_TASKLIST_ROOT_URL: https://${HOSTNAME}/tasklist
      KEYCLOAK_INIT_OPTIMIZE_SECRET: ${OPTIMIZE_CLIENT_SECRET}
      KEYCLOAK_INIT_OPTIMIZE_ROOT_URL: https://${HOSTNAME}/optimize
      KEYCLOAK_INIT_WEBMODELER_ROOT_URL: https://${HOSTNAME}/modeler
      KEYCLOAK_INIT_CONNECTORS_SECRET: ${CONNECTORS_CLIENT_SECRET}
      KEYCLOAK_INIT_CONNECTORS_ROOT_URL: https://${HOSTNAME}/connectors
      KEYCLOAK_INIT_ZEEBE_NAME: zeebe
      KEYCLOAK_USERS_0_USERNAME: ${USER_0_USERNAME}
      KEYCLOAK_USERS_0_PASSWORD: ${USER_0_PASSWORD}
      KEYCLOAK_USERS_0_FIRST_NAME: ${USER_0_FIRST_NAME}
      KEYCLOAK_USERS_0_EMAIL: ${USER_0_EMAIL}
      KEYCLOAK_USERS_0_ROLES_0: Identity
      KEYCLOAK_USERS_0_ROLES_1: Optimize
      KEYCLOAK_USERS_0_ROLES_2: Operate
      KEYCLOAK_USERS_0_ROLES_3: Tasklist
      KEYCLOAK_USERS_0_ROLES_4: Web Modeler
      KEYCLOAK_USERS_0_ROLES_5: Web Modeler Admin
      KEYCLOAK_USERS_0_ROLES_6: Zeebe
      KEYCLOAK_CLIENTS_0_NAME: zeebe
      KEYCLOAK_CLIENTS_0_ID: ${ZEEBE_CLIENT_ID}
      KEYCLOAK_CLIENTS_0_SECRET: ${ZEEBE_CLIENT_SECRET}
      KEYCLOAK_CLIENTS_0_TYPE: M2M
      KEYCLOAK_CLIENTS_0_PERMISSIONS_0_RESOURCE_SERVER_ID: zeebe-api
      KEYCLOAK_CLIENTS_0_PERMISSIONS_0_DEFINITION: write:*
      KEYCLOAK_CLIENTS_0_PERMISSIONS_1_RESOURCE_SERVER_ID: operate-api
      KEYCLOAK_CLIENTS_0_PERMISSIONS_1_DEFINITION: write:*
      KEYCLOAK_CLIENTS_0_PERMISSIONS_2_RESOURCE_SERVER_ID: tasklist-api
      KEYCLOAK_CLIENTS_0_PERMISSIONS_2_DEFINITION: write:*
      KEYCLOAK_CLIENTS_0_PERMISSIONS_3_RESOURCE_SERVER_ID: optimize-api
      KEYCLOAK_CLIENTS_0_PERMISSIONS_3_DEFINITION: write:*
      KEYCLOAK_CLIENTS_0_PERMISSIONS_4_RESOURCE_SERVER_ID: tasklist-api
      KEYCLOAK_CLIENTS_0_PERMISSIONS_4_DEFINITION: read:*
      KEYCLOAK_CLIENTS_0_PERMISSIONS_5_RESOURCE_SERVER_ID: operate-api
      KEYCLOAK_CLIENTS_0_PERMISSIONS_5_DEFINITION: read:*
      MULTITENANCY_ENABLED: ${MULTI_TENANCY_ENABLED}
      RESOURCE_PERMISSIONS_ENABLED: ${RESOURCE_AUTHORIZATIONS_ENABLED}
    volumes:
      - keycloak-theme:/app/keycloak-theme
    networks:
      - camunda-platform
      - identity-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-q",
          "--tries=1",
          "--spider",
          "http://localhost:8082/actuator/health",
        ]
      interval: 5s
      timeout: 15s
      retries: 30
      start_period: 60s
    depends_on:
      keycloak:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.8"
        reservations:
          memory: 400M
          cpus: "0.3"

volumes:
  keycloak-theme:

networks:
  camunda-platform:
  identity-network:
