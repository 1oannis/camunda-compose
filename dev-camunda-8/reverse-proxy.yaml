services:
  traefik:
    image: traefik:${TRAEFIK_VERSION}
    container_name: traefik
    command:
      # API and Dashboard
      - "--api.dashboard=${TRAEFIK_DASHBOARD_ENABLED}"
      - "--api.insecure=${TRAEFIK_DASHBOARD_INSECURE}"
      # Logging
      - "--log.level=${TRAEFIK_LOG_LEVEL}"
      - "--log.maxAge=1"
      - "--log.compress=true"
      - "--accesslog=true"
      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      # Docker provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=camunda-platform"
      # Default fallback rule
      - "--providers.docker.defaultrule=Host(`${HOSTNAME}`)"
      # Let's Encrypt configuration
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Uncomment for testing (acme staging server)
      # - "--certificatesresolvers.letsencrypt.acme.caserver=${ACME_CASERVER}"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard (development only)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./container.traefik/letsencrypt:/letsencrypt
    networks:
      - camunda-platform
      - identity-network
      - web-modeler
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: "0.5"
        reservations:
          memory: 300M
          cpus: "0.25"

networks:
  camunda-platform:
  identity-network:
  web-modeler:
