# Web Modeler Components
# This file contains services for the Camunda Web Modeler

services:
  web-modeler-db:
    container_name: web-modeler-db
    image: postgres:${POSTGRES_VERSION}
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 500M
          cpus: '0.25'
    healthcheck:
      test: pg_isready -d web-modeler-db -U web-modeler-db-user
      interval: 5s
      timeout: 15s
      retries: 30
    environment:
      POSTGRES_DB: web-modeler-db
      POSTGRES_USER: web-modeler-db-user
      POSTGRES_PASSWORD: web-modeler-db-password
    networks:
      - web-modeler
      - camunda-platform
    volumes:
      - postgres-web:/var/lib/postgresql/data

  mailpit:
    # If you want to use your own SMTP server, you can remove this container
    # and configure RESTAPI_MAIL_HOST, RESTAPI_MAIL_PORT, REST_API_MAIL_USER,
    # REST_API_MAIL_PASSWORD and RESTAPI_MAIL_ENABLE_TLS in web-modeler-restapi
    container_name: mailpit
    image: axllent/mailpit:${MAILPIT_VERSION}
    environment:
      - MP_WEBROOT=/mail
    deploy:
      resources:
        limits:
          memory: 300M
          cpus: '0.2'
        reservations:
          memory: 150M
          cpus: '0.1'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailpit.rule=Host(`${HOSTNAME}`) && PathPrefix(`/mail`)" # For Mailpit UI
      - "traefik.http.routers.mailpit.entrypoints=websecure"
      - "traefik.http.routers.mailpit.tls.certresolver=letsencrypt"
      - "traefik.http.services.mailpit.loadbalancer.server.port=8025"
      - "traefik.http.middlewares.mailpit-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.mailpit-headers.headers.customrequestheaders.X-Forwarded-Host=${HOSTNAME}"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolallowmethods=${CORS_ALLOWED_METHODS}"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolallowheaders=${CORS_ALLOWED_HEADERS}"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolalloworiginlist=${CORS_ALLOWED_ORIGINS}"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolallowcredentials=${CORS_ALLOW_CREDENTIALS}"
      - "traefik.http.routers.mailpit.middlewares=mailpit-headers,mailpit-cors"
    healthcheck:
      test: /usr/bin/nc -v localhost 1025
      interval: 30s
    networks:
      - web-modeler

  web-modeler-restapi:
    container_name: web-modeler-restapi
    image: camunda/web-modeler-restapi:${CAMUNDA_WEB_MODELER_VERSION}
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '0.8'
        reservations:
          memory: 800M
          cpus: '0.3'
    command: /bin/sh -c "java $JAVA_OPTIONS org.springframework.boot.loader.JarLauncher"
    depends_on:
      web-modeler-db:
        condition: service_healthy
      mailpit:
        condition: service_started
      identity:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8091/health/readiness"]
      interval: 5s
      timeout: 15s
      retries: 30
    environment:
      JAVA_OPTIONS: -Xmx800m
      LOGGING_LEVEL_IO_CAMUNDA_MODELER: DEBUG
      CAMUNDA_IDENTITY_BASEURL: http://identity:8084
      SPRING_DATASOURCE_URL: jdbc:postgresql://web-modeler-db:5432/web-modeler-db
      SPRING_DATASOURCE_USERNAME: web-modeler-db-user
      SPRING_DATASOURCE_PASSWORD: web-modeler-db-password
      SPRING_PROFILES_INCLUDE: default-logging
      RESTAPI_PUSHER_HOST: web-modeler-websockets
      RESTAPI_PUSHER_PORT: "8060"
      RESTAPI_PUSHER_APP_ID: web-modeler-app
      RESTAPI_PUSHER_KEY: web-modeler-app-key
      RESTAPI_PUSHER_SECRET: web-modeler-app-secret
      RESTAPI_OAUTH2_TOKEN_ISSUER: https://${HOSTNAME}/auth/realms/camunda-platform
      RESTAPI_OAUTH2_TOKEN_ISSUER_BACKEND_URL: http://keycloak:18080/auth/realms/camunda-platform
      RESTAPI_SERVER_URL: https://${HOSTNAME}/modeler
      RESTAPI_MAIL_HOST: mailpit
      RESTAPI_MAIL_PORT: 1025
      RESTAPI_MAIL_ENABLE_TLS: "false"
      RESTAPI_MAIL_FROM_ADDRESS: "noreply@1oannis.com"
      CAMUNDA_MODELER_CLUSTERS_0_ID: "local-zeebe"
      CAMUNDA_MODELER_CLUSTERS_0_NAME: "Local Zeebe instance"
      CAMUNDA_MODELER_CLUSTERS_0_VERSION: ${CAMUNDA_ZEEBE_VERSION}
      CAMUNDA_MODELER_CLUSTERS_0_URL_ZEEBE_GRPC: grpc://zeebe:26500
      CAMUNDA_MODELER_CLUSTERS_0_URL_ZEEBE_REST: http://zeebe:8080
      CAMUNDA_MODELER_CLUSTERS_0_URL_OPERATE: http://operate:8080
      CAMUNDA_MODELER_CLUSTERS_0_URL_TASKLIST: http://tasklist:8080
      # Zeebe authentication configuration
      CAMUNDA_MODELER_CLUSTERS_0_AUTHENTICATION: BEARER_TOKEN
      CAMUNDA_MODELER_CLUSTERS_0_AUTHENTICATION_CLIENT_ID: ${ZEEBE_CLIENT_ID}
      CAMUNDA_MODELER_CLUSTERS_0_AUTHENTICATION_CLIENT_SECRET: ${ZEEBE_CLIENT_SECRET}
      CAMUNDA_MODELER_CLUSTERS_0_AUTHENTICATION_AUDIENCE: zeebe-api
      CAMUNDA_MODELER_CLUSTERS_0_AUTHENTICATION_ISSUER_URL: http://keycloak:18080/auth/realms/camunda-platform
    # extra cluster configuration depending on the authentication mode
    env_file: ./.web-modeler/cluster-config-authentication-mode-${ZEEBE_AUTHENTICATION_MODE}.env
    networks:
      - web-modeler
      - camunda-platform

  web-modeler-webapp:
    container_name: web-modeler-webapp
    image: camunda/web-modeler-webapp:${CAMUNDA_WEB_MODELER_VERSION}
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 400M
          cpus: '0.3'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.modeler-webapp.rule=Host(`${HOSTNAME}`) && PathPrefix(`/modeler`)"
      - "traefik.http.routers.modeler-webapp.entrypoints=websecure"
      - "traefik.http.routers.modeler-webapp.tls.certresolver=letsencrypt"
      - "traefik.http.services.modeler-webapp.loadbalancer.server.port=8070"
      - "traefik.http.middlewares.modeler-webapp-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.modeler-webapp-headers.headers.customrequestheaders.X-Forwarded-Host=${HOSTNAME}"
      - "traefik.http.middlewares.modeler-webapp-cors.headers.accesscontrolallowmethods=${CORS_ALLOWED_METHODS}"
      - "traefik.http.middlewares.modeler-webapp-cors.headers.accesscontrolallowheaders=${CORS_ALLOWED_HEADERS}"
      - "traefik.http.middlewares.modeler-webapp-cors.headers.accesscontrolalloworiginlist=${CORS_ALLOWED_ORIGINS}"
      - "traefik.http.middlewares.modeler-webapp-cors.headers.accesscontrolallowcredentials=${CORS_ALLOW_CREDENTIALS}"
      - "traefik.http.routers.modeler-webapp.middlewares=modeler-webapp-headers,modeler-webapp-cors"
    depends_on:
      web-modeler-restapi:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8071/health/readiness"]
      interval: 5s
      timeout: 15s
      retries: 30
    environment:
      RESTAPI_HOST: web-modeler-restapi
      SERVER_HTTPS_ONLY: "true"
      SERVER_URL: https://${HOSTNAME}/modeler
      PUSHER_APP_ID: web-modeler-app
      PUSHER_KEY: web-modeler-app-key
      PUSHER_SECRET: web-modeler-app-secret
      PUSHER_HOST: web-modeler-websockets
      PUSHER_PORT: "8060"
      CLIENT_PUSHER_HOST: ${HOSTNAME}
      CLIENT_PUSHER_PORT: "443"
      CLIENT_PUSHER_FORCE_TLS: "true"
      CLIENT_PUSHER_KEY: web-modeler-app-key
      OAUTH2_CLIENT_ID: web-modeler
      OAUTH2_JWKS_URL: http://keycloak:18080/auth/realms/camunda-platform/protocol/openid-connect/certs
      OAUTH2_TOKEN_AUDIENCE: web-modeler-api
      OAUTH2_TOKEN_ISSUER: https://${HOSTNAME}/auth/realms/camunda-platform
      IDENTITY_BASE_URL: http://identity:8084
      PLAY_ENABLED: "true"
    networks:
      - web-modeler
      - camunda-platform

  web-modeler-websockets:
    container_name: web-modeler-websockets
    image: camunda/web-modeler-websockets:${CAMUNDA_WEB_MODELER_VERSION}
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.4'
        reservations:
          memory: 300M
          cpus: '0.2'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.modeler-websockets.rule=Host(`${HOSTNAME}`) && PathPrefix(`/modeler-ws`)"
      - "traefik.http.routers.modeler-websockets.entrypoints=websecure"
      - "traefik.http.routers.modeler-websockets.tls.certresolver=letsencrypt"
      - "traefik.http.services.modeler-websockets.loadbalancer.server.port=8060"
      - "traefik.http.middlewares.modeler-websockets-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.modeler-websockets-headers.headers.customrequestheaders.X-Forwarded-Host=${HOSTNAME}"
      - "traefik.http.middlewares.modeler-websockets-cors.headers.accesscontrolallowmethods=${CORS_ALLOWED_METHODS}"
      - "traefik.http.middlewares.modeler-websockets-cors.headers.accesscontrolallowheaders=${CORS_ALLOWED_HEADERS}"
      - "traefik.http.middlewares.modeler-websockets-cors.headers.accesscontrolalloworiginlist=${CORS_ALLOWED_ORIGINS}"
      - "traefik.http.middlewares.modeler-websockets-cors.headers.accesscontrolallowcredentials=${CORS_ALLOW_CREDENTIALS}"
      - "traefik.http.routers.modeler-websockets.middlewares=modeler-websockets-headers,modeler-websockets-cors"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8060/up"]
      interval: 5s
      timeout: 15s
      retries: 30
    environment:
      APP_NAME: "Web Modeler Self-Managed WebSockets"
      APP_DEBUG: "true"
      PUSHER_APP_ID: web-modeler-app
      PUSHER_APP_KEY: web-modeler-app-key
      PUSHER_APP_SECRET: web-modeler-app-secret
    networks:
      - web-modeler

volumes:
  postgres-web:

networks:
  camunda-platform:
  web-modeler: 